name: Server Deploy
on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Google App Engine Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP with Workload Identity Federation
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Configure NPM to use Artifact Registry
        run: |
          cat << EOF > .npmrc
            @expense-manager:registry=https://europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/
            //europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/:_authToken="${{ steps.auth.outputs.access_token }}"
            //europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/:always-auth=true
          EOF

      - name: Gcp Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Create env file'
        run: |
          touch .env
          echo PROJECT_ID=${{ secrets.GCP_PROJECT_ID }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo GMAIL_REFRESH_TOKEN=${{ secrets.GMAIL_REFRESH_TOKEN }} >> .env
          echo GMAIL_EMAIL=${{ secrets.GMAIL_EMAIL }} >> .env
          echo ENVIRONMENT=${{ secrets.ENVIRONMENT }} >> .env
          cat .env
      - name: Install node dependencies
        run: npm ci
      - name: Deploy to google cloud
        run: |
          gcloud config set project awesome-expense-management
          gcloud app deploy app.yaml --quiet
