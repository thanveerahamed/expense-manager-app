# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: deploy client to production
'on':
  push:
    paths:
      - 'client/**'
permissions:
  id-token: write
  contents: read

env:
  CI: false
  VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_MESSAGE_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGE_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP with Workload Identity Federation
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Configure NPM to use Artifact Registry
        run: |
          cat << EOF > .npmrc
            @expense-manager:registry=https://europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/
            //europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/:_authToken="${{ steps.auth.outputs.access_token }}"
            //europe-west1-npm.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/expense-manager-repo/:always-auth=true
          EOF

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AWESOME_EXPENSE_MANAGEMENT }}'
          channelId: live
          projectId: '${{ secrets.GCP_PROJECT_ID }}'
